name: CD

on:
  push:
    branches: 
      - devel
      - stage
      - prod

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_RETION: us-east-2

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      # se añade desde aqui el setup de node
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 15.5.1
      
      - name: Install dependencies
        run: npm install

      - name: Build
        run: npm run build
      # #################################### hasta aqui
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.6.0"

      # Define el entorno según la rama
      - name: Set environment directory
        run: |
          if [[ "${{ github.ref_name }}" == "stage" ]]; then
            echo "environment=terraform/environments/stage" >> $GITHUB_ENV
          elif [[ "${{ github.ref_name }}" == "prod" ]]; then
            echo "environment=terraform/environments/prod" >> $GITHUB_ENV
          elif [[ "${{ github.ref_name }}" == "devel" ]]; then
            echo "environment=terraform/environments/devel" >> $GITHUB_ENV            
          else
            echo "Environment not recognized"
            exit 1
          fi

      # - name: Change directory
      #   run: cd ${{ env.environment }}

      - name: Terraform init
        working-directory: ${{ env.environment }}
#        env:
#          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}        
        run: terraform init
      
      - name: Terraform Apply
        working-directory: ${{ env.environment }}      
#        env:
#          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: terraform apply -auto-approve

      - name: Copy build files to S3
        run: |
          BUCKET_NAME="${{ github.ref_name }}-ipv4-app-bucket"
          aws s3 sync ./build s3://$BUCKET_NAME/ --region us-east-2
#        env:
#          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}